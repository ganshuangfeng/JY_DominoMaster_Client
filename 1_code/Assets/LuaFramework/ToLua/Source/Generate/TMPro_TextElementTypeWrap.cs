//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class TMPro_TextElementTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(TMPro.TextElementType));
		L.RegVar("Character", get_Character, null);
		L.RegVar("Sprite", get_Sprite, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<TMPro.TextElementType>.Check = CheckType;
		StackTraits<TMPro.TextElementType>.Push = Push;
	}

	static void Push(IntPtr L, TMPro.TextElementType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(TMPro.TextElementType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Character(IntPtr L)
	{
		ToLua.Push(L, TMPro.TextElementType.Character);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Sprite(IntPtr L)
	{
		ToLua.Push(L, TMPro.TextElementType.Sprite);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		TMPro.TextElementType o = (TMPro.TextElementType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

